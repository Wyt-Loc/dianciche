C251 COMPILER V5.57.0,  LQ_ICM42605                                                        03/01/21  15:12:52  PAGE 1   


C251 COMPILER V5.57.0, COMPILATION OF MODULE LQ_ICM42605
OBJECT MODULE PLACED IN .\Objects\LQ_ICM42605.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE LQlib\app\LQ_ICM42605.c LARGE INTR2 BROWSE INCDIR(.\user;.\LQlib\app;.
                    -\LQlib\ddc;.\LQlib\driver) DEBUG PRINT(.\Listings\LQ_ICM42605.lst) TABS(2) OBJECT(.\Objects\LQ_ICM42605.obj) 

stmt  level    source

    1          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    2          【平    台】北京龙邱智能科技自平衡摩托车
    3          【编    写】chiusir
    4          【E-mail  】chiusir@163.com
    5          【软件版本】V1.1 版权所有，单位使用请先联系授权
    6          【最后更新】2020年4月10日
    7          【相关信息参考下列地址】
    8          【网    站】http://www.lqist.cn
    9          【淘宝店铺】http://longqiu.taobao.com
   10          ------------------------------------------------
   11          【dev.env.】Keil5.2及以上版本
   12          【Target 】 STC16F40K
   13          【SYS PLL】 36MHz
   14          =================================================================
   15          程序配套视频地址：https://space.bilibili.com/95313236
   16          下载时, 选择时钟 30MHZ (用户可自行修改频率).
   17          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
   18          #include "include.h"
   19          
   20          #define USE_SOFT_SPI //使用模拟SPI,否则使用硬件SPI
   21          
   22          
   23          /*************************************************************************
   24          *  函数名称：void ICM_Get_Gyroscope(short *gx,short *gy,short *gz)
   25          *  功能说明：
   26          *  参数说明：无
   27          *  函数返回：无
   28          *  修改时间：2020年8月10日
   29          *  备    注：   
   30          *************************************************************************/
   31          void ICM_Get_Gyroscope(short *gx,short *gy,short *gz)
   32          {
   33   1        unsigned char buf[7]; 
   34   1        ICM_Read_Len(ICM_GYRO_XOUTH_REG,buf,6);
*** WARNING C161 IN LINE 34 OF LQlib\app\LQ_ICM42605.c: 'xdata' pointer truncated to 'unsigned char'
*** WARNING C10 IN LINE 34 OF LQlib\app\LQ_ICM42605.c: conversion: 'pointer' to 'unsigned char'
   35   1        
   36   1        *gx=((uint16_t)buf[1]<<8)|buf[2];  
   37   1        *gy=((uint16_t)buf[3]<<8)|buf[4];  
   38   1        *gz=((uint16_t)buf[5]<<8)|buf[6];
   39   1        
   40   1      }
   41          /*************************************************************************
   42          *  函数名称：void ICM_Get_Accelerometer(short *ax,short *ay,short *az)
   43          *  功能说明：
   44          *  参数说明：无
   45          *  函数返回：无
   46          *  修改时间：2020年8月10日
   47          *  备    注：   
   48          *************************************************************************/
   49          void ICM_Get_Accelerometer(short *ax,short *ay,short *az)
   50          {
   51   1        unsigned char buf[7];  
   52   1        ICM_Read_Len(ICM_ACCEL_XOUTH_REG,buf,6);
*** WARNING C161 IN LINE 52 OF LQlib\app\LQ_ICM42605.c: 'xdata' pointer truncated to 'unsigned char'
*** WARNING C10 IN LINE 52 OF LQlib\app\LQ_ICM42605.c: conversion: 'pointer' to 'unsigned char'
   53   1        
   54   1        *ax=((uint16_t)buf[1]<<8)|buf[2];  
C251 COMPILER V5.57.0,  LQ_ICM42605                                                        03/01/21  15:12:52  PAGE 2   

   55   1        *ay=((uint16_t)buf[3]<<8)|buf[4];  
   56   1        *az=((uint16_t)buf[5]<<8)|buf[6];  
   57   1      }
   58          
   59          /*************************************************************************
   60          *  函数名称：void ICM_Get_Raw_data(short *ax,short *ay,short *az,short *gx,short *gy,short *gz)
   61          *  功能说明：读取加速度陀螺仪数据
   62          *  参数说明：六轴
   63          *  函数返回：无
   64          *  修改时间：2020年8月10日
   65          *  备    注：   
   66          *************************************************************************/
   67          void ICM_Get_Raw_data(short *ax,short *ay,short *az,short *gx,short *gy,short *gz)
   68          {
   69   1        unsigned char buf[14];  
   70   1        ICM_Read_Len(ICM_ACCEL_XOUTH_REG,buf,12);
*** WARNING C161 IN LINE 70 OF LQlib\app\LQ_ICM42605.c: 'xdata' pointer truncated to 'unsigned char'
*** WARNING C10 IN LINE 70 OF LQlib\app\LQ_ICM42605.c: conversion: 'pointer' to 'unsigned char'
   71   1        
   72   1        *ax=((uint16_t)buf[1]<<8)|buf[2];  
   73   1        *ay=((uint16_t)buf[3]<<8)|buf[4];  
   74   1        *az=((uint16_t)buf[5]<<8)|buf[6];
   75   1        *gx=((uint16_t)buf[7]<<8)|buf[8];  
   76   1        *gy=((uint16_t)buf[9]<<8)|buf[10];  
   77   1        *gz=((uint16_t)buf[11]<<8)|buf[12];  
   78   1      }
   79          /*************************************************************************
   80          *  函数名称：void ICM_Write_Byte(unsigned char reg,unsigned char value)
   81          *  功能说明：向寄存器写数据
   82          *  参数说明：unsigned char reg寄存器,unsigned char value数据
   83          *  函数返回：无
   84          *  修改时间：2020年8月10日
   85          *  备    注：   
   86          *************************************************************************/
   87          void ICM_Write_Byte(unsigned char reg,unsigned char value)
   88          {
   89   1      #ifdef USE_SOFT_SPI
   90   1        unsigned char buff[2];  
   91   1        buff[0] = reg;                  //先发送寄存器
   92   1        buff[1] = value;                //再发送数据  
   93   1        Soft_SPI_ReadWriteNbyte(buff, 2);//发送buff里数据，并采集到 buff里  
   94   1        
   95   1      #else
                 SPI_CS=0;
                 SPI_WriteByte(reg|0x80);
                 SPI_WriteByte(value);
                 SPI_CS=1;
               #endif
  101   1      }
  102          
  103          /*************************************************************************
  104          *  函数名称：void ICM_Write_Byte(unsigned char reg,unsigned char value)
  105          *  功能说明：向寄存器写数据
  106          *  参数说明：unsigned char reg寄存器,
  107          *  函数返回：unsigned char value数据
  108          *  修改时间：2020年8月10日
  109          *  备    注：   
  110          *************************************************************************/
  111          unsigned char ICM_Read_Byte(unsigned char reg)
  112          {  
  113   1        unsigned char buff[2];
  114   1      #ifdef USE_SOFT_SPI
  115   1        buff[0] = reg | 0x80;    //先发送寄存器  
  116   1        Soft_SPI_ReadWriteNbyte(buff, 2);   
  117   1        return buff[1];
  118   1      #else
C251 COMPILER V5.57.0,  LQ_ICM42605                                                        03/01/21  15:12:52  PAGE 3   

                 SPI_CS=0;
                 SPI_WriteByte(reg| 0x80);  
                 buff[0]=SPI_ReadByte();
                 SPI_CS=1;
                 return buff[0];
               #endif 
  125   1        
  126   1      }
  127          
  128          /*************************************************************************
  129          *  函数名称：void ICM_Read_Len(unsigned char reg,unsigned char len,unsigned char *buf)
  130          *  功能说明：unsigned char reg起始寄存器,unsigned char *buf数据指针,u16 len长度
  131          *  参数说明：无
  132          *  函数返回：无
  133          *  修改时间：2020年8月10日
  134          *  备    注：   
  135          *************************************************************************/
  136          void ICM_Read_Len(unsigned char reg,unsigned char *buf,unsigned char len)
  137          {  
*** WARNING C57 IN LINE 137 OF LQlib\app\LQ_ICM42605.c: parameter 2: different from declaration
*** WARNING C57 IN LINE 137 OF LQlib\app\LQ_ICM42605.c: parameter 3: different from declaration
  138   1      #ifdef USE_SOFT_SPI
  139   1        buf[0] = reg | 0x80;  
  140   1        Soft_SPI_ReadWriteNbyte(buf, len + 1);  
  141   1      #else
                 SPI_Read_Nbytes(reg|0x80, buf, len);
               #endif
  144   1      }
  145          /*************************************************************************
  146          *  函数名称：unsigned char ICM42605_Init(void)
  147          *  功能说明：ICM42605初始化
  148          *  参数说明：无
  149          *  函数返回：0 成功；1失败
  150          *  修改时间：2020年8月10日
  151          *  备    注：   
  152          *************************************************************************/
  153          unsigned char ICM42605_Init(void)
  154          {   
  155   1        unsigned char lqv;
  156   1        char  txt[30];
  157   1        
  158   1        Soft_SPI_Init(); 
  159   1        delayms(200);  
  160   1        
  161   1        lqv = ICM_Read_Byte(WHO_AM_I);//WHO_AM_I
  162   1        sprintf(txt,"ID:0x%02X",lqv);
  163   1        OLED_P8x16Str(66,2,(unsigned char*)txt);
  164   1        
  165   1        ICM_Write_Byte(reg_bank_sel,0x00);//Set to bank 0
*** ERROR C67 IN LINE 165 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 165 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  166   1        ICM_Write_Byte(reg_bank_sel,0x00);//Set to bank 0
*** ERROR C67 IN LINE 166 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 166 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  167   1        ICM_Write_Byte(device_config_reg,bit_soft_reset_chip_config);//chip soft reset
*** ERROR C67 IN LINE 167 OF LQlib\app\LQ_ICM42605.c: 'device_config_reg': undefined identifier
*** ERROR C67 IN LINE 167 OF LQlib\app\LQ_ICM42605.c: 'bit_soft_reset_chip_config': undefined identifier
*** WARNING C96 IN LINE 167 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  168   1        delayms(100);  
  169   1        
  170   1        if(lqv==0x42)
  171   1        {
  172   2          ICM_Write_Byte(reg_bank_sel,0x01);//Change to bank 1
*** ERROR C67 IN LINE 172 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 172 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  173   2          ICM_Write_Byte(intf_config4,0x02);//4 wire spi mode
C251 COMPILER V5.57.0,  LQ_ICM42605                                                        03/01/21  15:12:52  PAGE 4   

*** ERROR C67 IN LINE 173 OF LQlib\app\LQ_ICM42605.c: 'intf_config4': undefined identifier
*** WARNING C96 IN LINE 173 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  174   2          
  175   2          ICM_Write_Byte(reg_bank_sel,0x00);        
*** ERROR C67 IN LINE 175 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 175 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  176   2          ICM_Write_Byte(fifo_config_reg,0x40);//Stream-to-FIFO Mode
*** ERROR C67 IN LINE 176 OF LQlib\app\LQ_ICM42605.c: 'fifo_config_reg': undefined identifier
*** WARNING C96 IN LINE 176 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  177   2          
  178   2          lqv = ICM_Read_Byte(int_source0_reg);      
*** ERROR C67 IN LINE 178 OF LQlib\app\LQ_ICM42605.c: 'int_source0_reg': undefined identifier
*** WARNING C96 IN LINE 178 OF LQlib\app\LQ_ICM42605.c: 'ICM_Read_Byte': too few actual parameters
  179   2          ICM_Write_Byte(int_source0_reg,0x00);    
*** ERROR C67 IN LINE 179 OF LQlib\app\LQ_ICM42605.c: 'int_source0_reg': undefined identifier
*** WARNING C96 IN LINE 179 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  180   2          ICM_Write_Byte(fifo_config2_reg,0x00);// watermark
*** ERROR C67 IN LINE 180 OF LQlib\app\LQ_ICM42605.c: 'fifo_config2_reg': undefined identifier
*** WARNING C96 IN LINE 180 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  181   2          ICM_Write_Byte(fifo_config3_reg,0x02);// watermark
*** ERROR C67 IN LINE 181 OF LQlib\app\LQ_ICM42605.c: 'fifo_config3_reg': undefined identifier
*** WARNING C96 IN LINE 181 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  182   2          ICM_Write_Byte(int_source0_reg, lqv); 
*** ERROR C67 IN LINE 182 OF LQlib\app\LQ_ICM42605.c: 'int_source0_reg': undefined identifier
*** WARNING C96 IN LINE 182 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  183   2          ICM_Write_Byte(fifo_config1_reg,0x63);// Enable the accel and gyro to the FIFO
*** ERROR C67 IN LINE 183 OF LQlib\app\LQ_ICM42605.c: 'fifo_config1_reg': undefined identifier
*** WARNING C96 IN LINE 183 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  184   2          
  185   2          ICM_Write_Byte(reg_bank_sel,0x00);
*** ERROR C67 IN LINE 185 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 185 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  186   2          ICM_Write_Byte(int_config_reg,0x36);   
*** ERROR C67 IN LINE 186 OF LQlib\app\LQ_ICM42605.c: 'int_config_reg': undefined identifier
*** WARNING C96 IN LINE 186 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  187   2          
  188   2          ICM_Write_Byte(reg_bank_sel, 0x00);
*** ERROR C67 IN LINE 188 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 188 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  189   2          lqv = (ICM_Read_Byte(int_source0_reg)|bit_int_fifo_ths_int1_en);      
*** ERROR C67 IN LINE 189 OF LQlib\app\LQ_ICM42605.c: 'int_source0_reg': undefined identifier
*** ERROR C67 IN LINE 189 OF LQlib\app\LQ_ICM42605.c: 'bit_int_fifo_ths_int1_en': undefined identifier
  190   2          ICM_Write_Byte(int_source0_reg, lqv);
*** ERROR C67 IN LINE 190 OF LQlib\app\LQ_ICM42605.c: 'int_source0_reg': undefined identifier
*** WARNING C96 IN LINE 190 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  191   2          
  192   2          ICM_Write_Byte(reg_bank_sel, 0x00);
*** ERROR C67 IN LINE 192 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 192 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  193   2          lqv = ((ICM_Read_Byte(accel_config0_reg)&0x1F)|(bit_accel_ui_fs_sel_8g));//8g
*** ERROR C67 IN LINE 193 OF LQlib\app\LQ_ICM42605.c: 'accel_config0_reg': undefined identifier
*** ERROR C67 IN LINE 193 OF LQlib\app\LQ_ICM42605.c: 'bit_accel_ui_fs_sel_8g': undefined identifier
  194   2          ICM_Write_Byte(accel_config0_reg, lqv);
*** ERROR C67 IN LINE 194 OF LQlib\app\LQ_ICM42605.c: 'accel_config0_reg': undefined identifier
*** WARNING C96 IN LINE 194 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  195   2          
  196   2          ICM_Write_Byte(reg_bank_sel, 0x00);
*** ERROR C67 IN LINE 196 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 196 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  197   2          lqv = ((ICM_Read_Byte(accel_config0_reg)&0xF0)|bit_accel_odr_50hz);
*** ERROR C67 IN LINE 197 OF LQlib\app\LQ_ICM42605.c: 'accel_config0_reg': undefined identifier
*** ERROR C67 IN LINE 197 OF LQlib\app\LQ_ICM42605.c: 'bit_accel_odr_50hz': undefined identifier
  198   2          ICM_Write_Byte(accel_config0_reg, lqv); 
*** ERROR C67 IN LINE 198 OF LQlib\app\LQ_ICM42605.c: 'accel_config0_reg': undefined identifier
*** WARNING C96 IN LINE 198 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  199   2          
C251 COMPILER V5.57.0,  LQ_ICM42605                                                        03/01/21  15:12:52  PAGE 5   

  200   2          ICM_Write_Byte(reg_bank_sel, 0x00);
*** ERROR C67 IN LINE 200 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 200 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  201   2          lqv = ((ICM_Read_Byte(gyro_config0_reg)&0x1F)|(bit_gyro_ui_fs_sel_1000dps));
*** ERROR C67 IN LINE 201 OF LQlib\app\LQ_ICM42605.c: 'gyro_config0_reg': undefined identifier
*** ERROR C67 IN LINE 201 OF LQlib\app\LQ_ICM42605.c: 'bit_gyro_ui_fs_sel_1000dps': undefined identifier
  202   2          ICM_Write_Byte(gyro_config0_reg,lqv);
*** ERROR C67 IN LINE 202 OF LQlib\app\LQ_ICM42605.c: 'gyro_config0_reg': undefined identifier
*** WARNING C96 IN LINE 202 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  203   2          
  204   2          ICM_Write_Byte(reg_bank_sel, 0x00);      
*** ERROR C67 IN LINE 204 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 204 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  205   2          lqv = ((ICM_Read_Byte(gyro_config0_reg)&0xF0)|bit_gyro_odr_50hz);
*** ERROR C67 IN LINE 205 OF LQlib\app\LQ_ICM42605.c: 'gyro_config0_reg': undefined identifier
*** ERROR C67 IN LINE 205 OF LQlib\app\LQ_ICM42605.c: 'bit_gyro_odr_50hz': undefined identifier
  206   2          ICM_Write_Byte(gyro_config0_reg, lqv); 
*** ERROR C67 IN LINE 206 OF LQlib\app\LQ_ICM42605.c: 'gyro_config0_reg': undefined identifier
*** WARNING C96 IN LINE 206 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  207   2          
  208   2          ICM_Write_Byte(reg_bank_sel, 0x00);
*** ERROR C67 IN LINE 208 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 208 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  209   2          lqv = ICM_Read_Byte(pwr_mgmt0_reg)|(bit_accel_mode_ln); // Accel on in LNM
*** ERROR C67 IN LINE 209 OF LQlib\app\LQ_ICM42605.c: 'pwr_mgmt0_reg': undefined identifier
*** ERROR C67 IN LINE 209 OF LQlib\app\LQ_ICM42605.c: 'bit_accel_mode_ln': undefined identifier
  210   2          ICM_Write_Byte(pwr_mgmt0_reg, lqv);  
*** ERROR C67 IN LINE 210 OF LQlib\app\LQ_ICM42605.c: 'pwr_mgmt0_reg': undefined identifier
*** WARNING C96 IN LINE 210 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  211   2          delayms(1);   
  212   2          
  213   2          ICM_Write_Byte(reg_bank_sel, 0x00);
*** ERROR C67 IN LINE 213 OF LQlib\app\LQ_ICM42605.c: 'reg_bank_sel': undefined identifier
*** WARNING C96 IN LINE 213 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  214   2          lqv = ICM_Read_Byte(pwr_mgmt0_reg)|(bit_gyro_mode_ln); // Gyro on in LNM
*** ERROR C67 IN LINE 214 OF LQlib\app\LQ_ICM42605.c: 'pwr_mgmt0_reg': undefined identifier
*** ERROR C67 IN LINE 214 OF LQlib\app\LQ_ICM42605.c: 'bit_gyro_mode_ln': undefined identifier
  215   2          ICM_Write_Byte(pwr_mgmt0_reg, lqv);  
*** ERROR C67 IN LINE 215 OF LQlib\app\LQ_ICM42605.c: 'pwr_mgmt0_reg': undefined identifier
*** WARNING C96 IN LINE 215 OF LQlib\app\LQ_ICM42605.c: 'ICM_Write_Byte': too few actual parameters
  216   2          delayms(1);   
  217   2          //printf("ok");
  218   2          OLED_P6x8Str(66,4,(unsigned char*)"Init Pass");
  219   2          return 0;
  220   2        }
  221   1        else 
  222   1        {
  223   2          OLED_P6x8Str(66,4,(unsigned char*)"Init Fail");
  224   2          return 1;
  225   2        }   
  226   1      }
  227          
  228          /*************************************************************************
  229          *  函数名称：void Test_ICM42605(void)
  230          *  功能说明：测试，读取加速度陀螺仪数据
  231          *  参数说明：无
  232          *  函数返回：无
  233          *  修改时间：2020年8月10日
  234          *  备    注：   
  235          *************************************************************************/
  236          void Test_ICM42605(void)
  237          {
  238   1        unsigned char  txt[30];
  239   1        //Sample_data_type_t *lqdat;
  240   1        short aacx,aacy,aacz;         //加速度传感器原始数据
  241   1        short gyrox,gyroy,gyroz;        //陀螺仪原始数据
C251 COMPILER V5.57.0,  LQ_ICM42605                                                        03/01/21  15:12:52  PAGE 6   

  242   1        UART1_config(1);              //调试
  243   1        OLED_Init();                  //LCD初始化
  244   1        OLED_CLS();                   //LCD清屏
  245   1        OLED_P8x16Str(15,0,"ICM42605 Test");  
  246   1        
  247   1        ICM42605_Init();
  248   1        
  249   1        while(1)
  250   1        {
  251   2          ICM_Get_Raw_data(&aacx,&aacy,&aacz,&gyrox,&gyroy,&gyroz); //得到加速度传感器数据  
  252   2          sprintf((char*)txt,"ax:%06d",aacx);
  253   2          OLED_P6x8Str(0,2,txt);
  254   2          sprintf((char*)txt,"ay:%06d",aacy);
  255   2          OLED_P6x8Str(0,3,txt);
  256   2          sprintf((char*)txt,"az:%06d",aacz);
  257   2          OLED_P6x8Str(0,4,txt);
  258   2          sprintf((char*)txt,"gx:%06d",gyrox);
  259   2          OLED_P6x8Str(0,5,txt);
  260   2          sprintf((char*)txt,"gy:%06d",gyroy);
  261   2          OLED_P6x8Str(0,6,txt);
  262   2          sprintf((char*)txt,"gz:%06d",gyroz);
  263   2          OLED_P6x8Str(0,7,txt);
  264   2          delayms(100);
  265   2      /*
  266   2          printf("\r\nAX: %d  ",aacx); 
  267   2          printf("\r\nAY: %d  ",aacy);
  268   2          printf("\r\nAZ: %d  ",aacz); 
  269   2          printf("\r\nGX: %d  ",gyrox);
  270   2          printf("\r\nGY: %d  ",gyroy); 
  271   2          printf("\r\nGZ: %d  ",gyroz);
  272   2          delayms(100);
  273   2          printf("\r\n*********************\n");
  274   2      */
  275   2        }
  276   1        
  277   1      }
  278          
  279          
  280          //
  281          
  282          

C251 COMPILATION COMPLETE.  37 WARNING(S),  44 ERROR(S)
