C251 COMPILER V5.60.0,  LQ_ADC                                                             09/04/23  11:30:28  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE LQ_ADC
OBJECT MODULE PLACED IN .\Objects\LQ_ADC.obj
COMPILER INVOKED BY: F:\MDK\C251\BIN\C251.EXE LQlib\driver\LQ_ADC.c LARGE INTR2 BROWSE INCDIR(.\user;.\LQlib\app;.\LQlib
                    -\driver) DEBUG PRINT(.\Listings\LQ_ADC.lst) TABS(2) OBJECT(.\Objects\LQ_ADC.obj) 

stmt  level    source

    1          /*LLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL
    2          【平    台】北京龙邱智能科技自平衡摩托车
    3          【编    写】chiusir
    4          【E-mail  】chiusir@163.com
    5          【软件版本】V1.1 版权所有，单位使用请先联系授权
    6          【最后更新】2020年4月10日
    7          【相关信息参考下列地址】
    8          【网    站】http://www.lqist.cn
    9          【淘宝店铺】http://longqiu.taobao.com
   10          ------------------------------------------------
   11          【dev.env.】Keil5.2及以上版本
   12          【Target 】 STC16F40K
   13          【SYS PLL】 36MHz
   14          ------------------------------------------------
   15          下载时, 选择时钟 30MHZ (用户可自行修改频率).
   16          QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ*/
   17          
   18          #include "include.h"
   19          
   20          
   21          int16_t ad_max[4] = {500,500};  // 新板子放到赛道标定最大值,会被程序刷新
   22          int16_t ad_min[4] = { 0,0};     // 新板子据需要标定最小值,会被程序刷新
   23          int16_t left = 0, right = 0;
   24          int16_t LnowADC[6];
   25          u16 Voltage; 
   26          /********************************************************************************************************
   27          **函数信息 ：ADC1_SingleChannel_Get(uint8_t ADC_Channel_x)       
   28          **功能描述 ：获取ADC1转换数据
   29          **输入参数 ：ADC_Channel_x , x为0~11
   30          **输出参数 ：puiADData为ADC读到的值，默认是12位
   31          ********************************************************************************************************/
   32          u16 ADC_Read(uint8 ADC_Channel_x)
   33          {
   34   1          ADC_RES = 0;
   35   1          ADC_RESL = 0;
   36   1      
   37   1          ADC_CONTR = (ADC_CONTR & 0xF0) | 0x40 | ADC_Channel_x;    //启动 AD 转换
   38   1          _nop_();
   39   1          _nop_();
   40   1          _nop_();
   41   1          _nop_();
   42   1      
   43   1          while((ADC_CONTR & 0x20) == 0)  ;   //wait for ADC finish
   44   1          ADC_CONTR &= ~0x20;                                       //清除ADC结束标志
   45   1          return  (((u16)ADC_RES << 8) | ADC_RESL);//默认是12位
   46   1      }
   47          
   48          /********************************************************************************************************
   49          **函数信息 ：Get_Adc_Average(uint8_t ADC_Channel_x,uint8_t times)     
   50          **功能描述 ：获取几次ADC1采样值的平均值
   51          **输入参数 ：ADC_Channel_x , x为0~8
   52          **输出参数 ：puiADData为ADC读到的值
   53          ********************************************************************************************************/
   54          u16 ADC_Read_Average(uint8 ADC_Channel_x,uint8 times)
   55          {
   56   1          u32 temp_val=0;
   57   1          u8 t;
   58   1          u8 delay;
C251 COMPILER V5.60.0,  LQ_ADC                                                             09/04/23  11:30:28  PAGE 2   

   59   1          for(t=0;t<times;t++)
   60   1          {
   61   2              temp_val+=ADC_Read(ADC_Channel_x);
   62   2              for(delay=0;delay<100;delay++);
   63   2          }
   64   1          return temp_val/times;
   65   1      } 
   66          /*************************************************************************
   67           *  函数名称：void InductorInit (void)
   68           *  功能说明：四个电感ADC初始化函数；
   69           *  参数说明：无
   70           *  函数返回：无
   71           *  修改时间：2020年11月18日
   72           *  备    注：
   73           *************************************************************************/
   74          void ADC_Init (void)
   75          {
   76   1        /*
   77   1          P0M1 |= 0x0f; P0M0 &= ~0x0f;  //设置0.0 0.1 0.2 0.3为高阻态
   78   1          P1M1 |= 0x03; P1M0 &= ~0x03;  //设置1.0 1.1为高阻态
   79   1        
   80   1          P_SW2 |= 0x80;
   81   1          ADCTIM = 0x3f;          //设置 ADC 内部时序，ADC采样时间建议设最大值
   82   1          P_SW2 &= 0x7f;
   83   1          ADCCFG = 0x2f;          //设置 ADC 时钟为系统时钟/2/16/16
   84   1          ADC_CONTR = 0x80;       //使能 ADC 模块
   85   1        */
   86   1        
   87   1        P_SW2 |= 0x80;   
   88   1        ADCTIM = 0x3f;          //设置 ADC 内部时序，ADC采样时间建议设最大值
   89   1        P_SW2 &= 0x7f;
   90   1        ADCCFG |= 0x2f;         //设置 ADC 时钟为系统时钟/2/16/16
   91   1        ADCCFG |= 1<<5;         //右对齐
   92   1        ADC_CONTR = 0x80;       //使能 ADC 模块
   93   1        
   94   1        //p0口使用了9 10 11   对应 io 0.1 0.2 0.3
   95   1        P0M0 = P0M0 & 0xf1;    //0        1 1 1 1 0 0 0 0   p0.0~p0.3为高阻输出
   96   1        P0M1 = P0M1 | 0x0e;    //1        1 1 1 1 1 1 1 1   p0.4~p0.7为开漏输出
   97   1        
   98   1        //p1口使用了0 1       对应 io 1.0 1.1
   99   1        P1M0 &= 0xfc;        //0          1 1 1 1 0 1 0 0  p1.0~p1.1 p1.3为高阻输入 
  100   1        P1M1 |= 0x0f;        //1          1 1 1 1 1 1 1 1  p1.2为推挽输出  p1.4~p1.7为开漏输出
  101   1      
  102   1      }
  103          
  104          /**************************************************************************
  105          函数功能：读取电感值 
  106          入口参数：无
  107          返回  值：无
  108          **************************************************************************/
  109          void Get_Adc(void)
  110          {
  111   1        LnowADC[0]=ADC_Read(11);      //读取ADC11通道值
  112   1        LnowADC[1]=ADC_Read(10);      //读取ADC10通道值
  113   1        LnowADC[2]=ADC_Read(9);       //读取ADC9通道值
  114   1        LnowADC[3]=ADC_Read(8);       //读取ADC8通道值  
  115   1        
  116   1      }
  117          /*************************************************************************
  118           *  函数名称：void InductorNormal(void)
  119           *  功能说明：采集电感电压并并归一化；
  120           *  函数返回：无
  121           *  修改时间：2020年11月26日
  122           *  备    注： 
  123           *************************************************************************/
  124          void InductorNormal(void)
C251 COMPILER V5.60.0,  LQ_ADC                                                             09/04/23  11:30:28  PAGE 3   

  125          {
  126   1          Get_Adc();  //读取ADC
  127   1          if (LnowADC[0] < ad_min[0])            ad_min[0] = LnowADC[0];     // 刷新最小值
  128   1          else if (LnowADC[0] > ad_max[0])       ad_max[0] = LnowADC[0];     // 刷新最大值
  129   1        
  130   1          if (LnowADC[1] < ad_min[1])            ad_min[1] = LnowADC[1];
  131   1          else if (LnowADC[1] > ad_max[1])       ad_max[1] = LnowADC[1]; 
  132   1        
  133   1          if (LnowADC[2] < ad_min[2])            ad_min[2] = LnowADC[2];
  134   1          else if (LnowADC[2] > ad_max[2])       ad_max[2] = LnowADC[2];
  135   1        
  136   1          if (LnowADC[3] < ad_min[3])            ad_min[3] = LnowADC[3];
  137   1          else if (LnowADC[3] > ad_max[3])       ad_max[3] = LnowADC[3];  
  138   1        
  139   1          left = (LnowADC[0] - ad_min[0]) * 100 / (ad_max[0] - ad_min[0]);     // 各偏移量归一化到0--1000以内
  140   1          right = (LnowADC[1] - ad_min[1]) * 100 / (ad_max[1] - ad_min[1]);
  141   1      }
  142          /*************************************************************************
  143          *  函数名称：void Test_ADC(void)
  144          *  功能说明：测试程序
  145          *  参数说明：无
  146          *  函数返回：无
  147          *  修改时间：2020年3月10日
  148          *  备    注：屏幕显示ADC采集的电感值
  149          *************************************************************************/
  150          void Test_ADC(void)
  151           {
  152   1        char txt[30]; 
  153   1        OLED_Init();    //OLED初始化
  154   1        OLED_CLS();     //清屏    
  155   1        OLED_P14x16Str(0,2,(unsigned char*)"北京龙邱智能科技");   //字符串显示
  156   1        OLED_P6x8Str(0,4,"Long Qiu i.s.t.");    //字符串显示
  157   1        delayms(1000);  //延时等待
  158   1        OLED_CLS();     //清屏    
  159   1        ADC_Init();     //ADC初始化
  160   1        while(1)
  161   1        {
  162   2          Get_Adc();  
  163   2          sprintf(txt,"AD0:%04d ",LnowADC[0]);  //显示ADC11的值
  164   2          OLED_P8x16Str(0,0,(u8*)txt);
  165   2          sprintf(txt,"AD1:%04d ",LnowADC[1]);  //显示ADC10的值
  166   2          OLED_P8x16Str(0,2,(u8*)txt);
  167   2          sprintf(txt,"AD2:%04d ",LnowADC[2]);  //显示ADC9的值
  168   2          OLED_P8x16Str(0,4,(u8*)txt);
  169   2          sprintf(txt,"AD3:%04d ",LnowADC[3]);  //显示ADC8的值
  170   2          OLED_P8x16Str(0,6,(u8*)txt);
  171   2          }
  172   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       664     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =        34         34
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
C251 COMPILER V5.60.0,  LQ_ADC                                                             09/04/23  11:30:28  PAGE 4   

  hconst size          =       113     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
