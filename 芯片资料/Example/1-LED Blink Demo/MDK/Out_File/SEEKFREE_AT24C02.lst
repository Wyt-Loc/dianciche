C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   06/04/23  23:11:20  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_AT24C02
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_AT24C02.obj
COMPILER INVOKED BY: F:\MDK\C251\BIN\C251.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_AT24C02.c XSMALL INTR2 WARNIN
                    -GLEVEL(3) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral
                    -;..\CODE;..\USER\inc;..\USER\src) DEBUG PRINT(.\Out_File\SEEKFREE_AT24C02.lst) TABS(2) OBJECT(.\Out_File\SEEKFREE_AT24C0
                    -2.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file          虚拟示波器协议
   11           * @company       成都逐飞科技有限公司
   12           * @author        逐飞科技(QQ3184284598)
   13           * @version       查看doc内version文件 版本说明
   14           * @Software    MDK FOR C251 V5.60
   15           * @Taobao      https://seekfree.taobao.com/
   16           * @date          2019-04-30
   17           * @note        
   18           ********************************************************************************************************
             -************/
   19          
   20          
   21          
   22          
   23          
   24          
   25          #include "zf_delay.h"
   26          #include "SEEKFREE_AT24C02.h"
   27          
   28          #pragma warning disable = 173
   29          
   30          
   31          
   32          #define GET_AT24C02_SDA           AT24C02_SDA_PIN
   33          #define AT24C02_SCL_LOW()           AT24C02_SCL_PIN = 0   //IO口输出低电平
   34          #define AT24C02_SCL_HIGH()          AT24C02_SCL_PIN = 1   //IO口输出高电平
   35          #define AT24C02_SDA_LOW()           AT24C02_SDA_PIN = 0   //IO口输出低电平
   36          #define AT24C02_SDA_HIGH()          AT24C02_SDA_PIN = 1   //IO口输出高电平
   37          
   38          
   39          #define ack 1      //主应答
   40          #define no_ack 0   //从应答 
   41          
   42          //-------------------------------------------------------------------------------------------------------
             -------------
   43          //  @brief      模拟IIC延时
   44          //  @return     void            
   45          //  @since      v1.0
   46          //  Sample usage:       如果IIC通讯失败可以尝试增加j的值
   47          //-------------------------------------------------------------------------------------------------------
             -------------
   48          static void at24c02_simiic_delay(void)
   49          {
   50   1          uint16 j=AT24C02_SOFT_IIC_DELAY;   
   51   1        while(j--);
   52   1      }
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   06/04/23  23:11:20  PAGE 2   

   53          
   54          //内部使用，用户无需调用
   55          static void at24c02_simiic_start(void)
   56          {
   57   1        AT24C02_SDA_HIGH();
   58   1        AT24C02_SCL_HIGH();
   59   1        at24c02_simiic_delay();
   60   1        AT24C02_SDA_LOW();
   61   1        at24c02_simiic_delay();
   62   1        AT24C02_SCL_LOW();
   63   1      }
   64          
   65          //内部使用，用户无需调用
   66          static void at24c02_simiic_stop(void)
   67          {
   68   1        AT24C02_SDA_LOW();
   69   1        AT24C02_SCL_LOW();
   70   1        at24c02_simiic_delay();
   71   1        AT24C02_SCL_HIGH();
   72   1        at24c02_simiic_delay();
   73   1        AT24C02_SDA_HIGH();
   74   1        at24c02_simiic_delay();
   75   1      }
   76          
   77          //主应答(包含ack:SDA=0和no_ack:SDA=0)
   78          //内部使用，用户无需调用
   79          static void at24c02_simiic_sendack(unsigned char ack_dat)
   80          {
   81   1          AT24C02_SCL_LOW();
   82   1        at24c02_simiic_delay();
   83   1        if(ack_dat) AT24C02_SDA_LOW();
   84   1          else      AT24C02_SDA_HIGH();
   85   1      
   86   1          AT24C02_SCL_HIGH();
   87   1          at24c02_simiic_delay();
   88   1          AT24C02_SCL_LOW();
   89   1          at24c02_simiic_delay();
   90   1      }
   91          
   92          
   93          static int at24c02_sccb_waitack(void)
   94          {
   95   1          AT24C02_SCL_LOW();
   96   1      
   97   1        at24c02_simiic_delay();
   98   1        
   99   1        AT24C02_SCL_HIGH();
  100   1          at24c02_simiic_delay();
  101   1        
  102   1          if(GET_AT24C02_SDA)           //应答为高电平，异常，通信失败
  103   1          {
  104   2      
  105   2              AT24C02_SCL_LOW();
  106   2              return 0;
  107   2          }
  108   1      
  109   1          AT24C02_SCL_LOW();
  110   1        at24c02_simiic_delay();
  111   1          return 1;
  112   1      }
  113          
  114          //字节发送程序
  115          //发送c(可以是数据也可是地址)，送完后接收从应答
  116          //不考虑从应答位
  117          //内部使用，用户无需调用
  118          static void at24c02_send_ch(uint8 c)
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   06/04/23  23:11:20  PAGE 3   

  119          {
  120   1        uint8 i = 8;
  121   1          while(i--)
  122   1          {
  123   2              if(c & 0x80)  AT24C02_SDA_HIGH();//SDA 输出数据
  124   2              else      AT24C02_SDA_LOW();
  125   2              c <<= 1;
  126   2              at24c02_simiic_delay();
  127   2              AT24C02_SCL_HIGH();                //SCL 拉高，采集信号
  128   2              at24c02_simiic_delay();
  129   2              AT24C02_SCL_LOW();                //SCL 时钟线拉低
  130   2          }
  131   1        at24c02_sccb_waitack();
  132   1      }
  133          
  134          
  135          //字节接收程序
  136          //接收器件传来的数据，此程序应配合|主应答函数|使用
  137          //内部使用，用户无需调用
  138          static uint8 at24c02_read_ch(uint8 ack_x)
  139          {
  140   1          uint8 i;
  141   1          uint8 c;
  142   1          c=0;
  143   1          AT24C02_SCL_LOW();
  144   1          at24c02_simiic_delay();
  145   1          AT24C02_SDA_HIGH();             
  146   1      
  147   1          for(i=0;i<8;i++)
  148   1          {
  149   2              at24c02_simiic_delay();
  150   2              AT24C02_SCL_LOW();         //置时钟线为低，准备接收数据位
  151   2              at24c02_simiic_delay();
  152   2              AT24C02_SCL_HIGH();         //置时钟线为高，使数据线上数据有效
  153   2              at24c02_simiic_delay();
  154   2              c<<=1;
  155   2              if(GET_AT24C02_SDA) 
  156   2              {
  157   3                  c+=1;   //读数据位，将接收的数据存c
  158   3              }
  159   2          }
  160   1      
  161   1        AT24C02_SCL_LOW();
  162   1        at24c02_simiic_delay();
  163   1        at24c02_simiic_sendack(ack_x);
  164   1        
  165   1          return c;
  166   1      }
  167          
  168          
  169          //-------------------------------------------------------------------------------------------------------
             -------------
  170          //  @brief      模拟IIC写数据到设备寄存器函数
  171          //  @param      dev_add     设备地址(低七位地址)
  172          //  @param      reg       寄存器地址
  173          //  @param      dat       写入的数据
  174          //  @return     void            
  175          //  @since      v1.0
  176          //  Sample usage:       
  177          //-------------------------------------------------------------------------------------------------------
             -------------
  178          static void at24c02_simiic_write_reg(uint8 dev_add, uint8 reg, uint8 dat)
  179          {
  180   1        at24c02_simiic_start();
  181   1          at24c02_send_ch( (dev_add<<1) | 0x00);   //发送器件地址加写位
  182   1        at24c02_send_ch( reg );            //发送从机寄存器地址
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   06/04/23  23:11:20  PAGE 4   

  183   1        at24c02_send_ch( dat );            //发送需要写入的数据
  184   1        at24c02_simiic_stop();
  185   1      }
  186          
  187          //-------------------------------------------------------------------------------------------------------
             -------------
  188          //  @brief      模拟IIC写数据到设备寄存器函数
  189          //  @param      dev_add     设备地址(低七位地址)
  190          //  @param      reg       寄存器地址
  191          //  @param      dat       写入的数据
  192          //  @return     void            
  193          //  @since      v1.0
  194          //  Sample usage:       
  195          //-------------------------------------------------------------------------------------------------------
             -------------
  196          //static void at24c02_simiic_write_regs(uint8 dev_add, uint8 reg, uint8 *dat, uint32 len)
  197          //{
  198          //  uint16 i = 0;
  199          //  at24c02_simiic_start();
  200          //    at24c02_send_ch( (dev_add<<1) | 0x00);   //发送器件地址加写位
  201          //  at24c02_send_ch( reg );            //发送从机寄存器地址
  202          
  203          //  while(len--)
  204          //  {
  205          //    at24c02_send_ch( *dat++ );           //发送需要写入的数据
  206          //  }
  207          
  208          //  
  209          //  at24c02_simiic_stop();
  210          //}
  211          //-------------------------------------------------------------------------------------------------------
             -------------
  212          //  @brief      模拟IIC从设备寄存器读取数据
  213          //  @param      dev_add     设备地址(低七位地址)
  214          //  @param      reg       寄存器地址
  215          //  @param      type      选择通信方式是IIC  还是 SCCB
  216          //  @return     uint8     返回寄存器的数据      
  217          //  @since      v1.0
  218          //  Sample usage:       
  219          //-------------------------------------------------------------------------------------------------------
             -------------
  220          static uint8 at24c02_simiic_read_reg(uint8 dev_add, uint8 reg)
  221          {
  222   1        uint8 dat;
  223   1        at24c02_simiic_start();
  224   1          at24c02_send_ch( (dev_add<<1) | 0x00);  //发送器件地址加写位
  225   1        at24c02_send_ch( reg );           //发送从机寄存器地址
  226   1        
  227   1        at24c02_simiic_start();
  228   1        at24c02_send_ch( (dev_add<<1) | 0x01);  //发送器件地址加读位
  229   1        dat = at24c02_read_ch(no_ack);          //读取数据
  230   1        at24c02_simiic_stop();
  231   1        
  232   1        return dat;
  233   1      }
  234          
  235          //-------------------------------------------------------------------------------------------------------
             -------------
  236          //  @brief      模拟IIC读取多字节数据
  237          //  @param      dev_add     设备地址(低七位地址)
  238          //  @param      reg       寄存器地址
  239          //  @param      dat_add     数据保存的地址指针
  240          //  @param      num       读取字节数量
  241          //  @param      type      选择通信方式是IIC  还是 SCCB
  242          //  @return     uint8     返回寄存器的数据      
  243          //  @since      v1.0
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   06/04/23  23:11:20  PAGE 5   

  244          //  Sample usage:       
  245          //-------------------------------------------------------------------------------------------------------
             -------------
  246          //static void at24c02_simiic_read_regs(uint8 dev_add, uint8 reg, uint8 *dat_add, uint32 num)
  247          //{
  248          //  at24c02_simiic_start();
  249          //    at24c02_send_ch( (dev_add<<1) | 0x00);  //发送器件地址加写位
  250          //  at24c02_send_ch( reg );           //发送从机寄存器地址
  251          //  
  252          //  at24c02_simiic_start();
  253          //  at24c02_send_ch( (dev_add<<1) | 0x01);  //发送器件地址加读位
  254          //    while(--num)
  255          //    {
  256          //        *dat_add = at24c02_read_ch(ack); //读取数据
  257          //        dat_add++;
  258          //    }
  259          //    *dat_add = at24c02_read_ch(no_ack); //读取数据
  260          //  at24c02_simiic_stop();
  261          //}
  262          
  263          
  264          
  265          //-------------------------------------------------------------------------------------------------------
             -------------
  266          //  @brief      at24c02写一个字节
  267          //  @param      byte_reg  at24c02地址(0-255)
  268          //  @param      dat     需要写入的数据
  269          //  @return     void          
  270          //  @since      v1.0
  271          //  Sample usage: 
  272          //  @note       
  273          //-------------------------------------------------------------------------------------------------------
             -------------
  274          void at24c02_write_byte(uint8 byte_reg, uint8 dat)
  275          {
  276   1        delay_ms(6);
  277   1        at24c02_simiic_write_reg(AT24C02_DEV_ADDR, byte_reg, dat);
  278   1      }
  279          
  280          //-------------------------------------------------------------------------------------------------------
             -------------
  281          //  @brief      at24c02读一个字节
  282          //  @param      byte_reg  at24c02地址(0-255)
  283          //  @return     uint8   返回读取到的字节数          
  284          //  @since      v1.0
  285          //  Sample usage: 
  286          //  @note       
  287          //-------------------------------------------------------------------------------------------------------
             -------------
  288          uint8 at24c02_read_byte(uint8 byte_reg)
  289          {
  290   1        delay_ms(6);
  291   1        return at24c02_simiic_read_reg(AT24C02_DEV_ADDR, byte_reg);
  292   1      }
  293          
  294          //-------------------------------------------------------------------------------------------------------
             -------------
  295          //  @brief      at24c02写多个字节
  296          //  @param      byte_reg  at24c02起始地址(0-255)
  297          //  @param      dat_add   需要写入的数据指针
  298          //  @param      num     需要写入多少个数据
  299          //  @return     void          
  300          //  @since      v1.0
  301          //  Sample usage: 
  302          //  @note       
  303          //-------------------------------------------------------------------------------------------------------
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   06/04/23  23:11:20  PAGE 6   

             -------------
  304          void at24c02_write_bytes(uint8 byte_reg, uint8 *dat_add, uint8 num)
  305          {
  306   1        delay_ms(6);
  307   1        at24c02_simiic_start();
  308   1          at24c02_send_ch( (AT24C02_DEV_ADDR<<1) | 0x00);
  309   1        at24c02_send_ch( byte_reg );          
  310   1      
  311   1          while(--num)
  312   1          {
  313   2          at24c02_send_ch( *dat_add++ );          
  314   2          byte_reg++;
  315   2          if((byte_reg % 8) == 0)
  316   2          {
  317   3            at24c02_simiic_stop();
  318   3            delay_ms(6);
  319   3            at24c02_simiic_start();
  320   3            at24c02_send_ch( (AT24C02_DEV_ADDR<<1) | 0x00);
  321   3            at24c02_send_ch( byte_reg );          
  322   3          }
  323   2          }
  324   1        at24c02_send_ch( *dat_add++ );   
  325   1        at24c02_simiic_stop();
  326   1      }
  327          
  328          //-------------------------------------------------------------------------------------------------------
             -------------
  329          //  @brief      at24c02读多个字节
  330          //  @param      byte_reg  at24c02起始地址(0-255)
  331          //  @param      dat_add   需要读出的数据指针
  332          //  @param      num     需要读出多少个数据
  333          //  @return     void          
  334          //  @since      v1.0
  335          //  Sample usage: 
  336          //  @note       
  337          //-------------------------------------------------------------------------------------------------------
             -------------
  338          void at24c02_read_bytes(uint8 byte_reg, uint8 *dat_add, uint8 num)
  339          {
  340   1        delay_ms(5);
  341   1        at24c02_simiic_start();
  342   1          at24c02_send_ch( (AT24C02_DEV_ADDR<<1) | 0x00);  //发送器件地址加写位
  343   1        at24c02_send_ch( byte_reg );             //发送从机寄存器地址
  344   1        delay_ms(5);
  345   1        at24c02_simiic_start();
  346   1        at24c02_send_ch( (AT24C02_DEV_ADDR<<1) | 0x01);  //发送器件地址加读位
  347   1          while(--num)
  348   1          {
  349   2              *dat_add++ = at24c02_read_ch(1); //读取数据
  350   2          byte_reg++;
  351   2          }
  352   1        *dat_add++ = at24c02_read_ch(0); //读取数据
  353   1        at24c02_simiic_stop();
  354   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       516     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------          4
  bit size             =    ------     ------
C251 COMPILER V5.60.0,  SEEKFREE_AT24C02                                                   06/04/23  23:11:20  PAGE 7   

  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
